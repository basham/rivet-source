// Copyright (C) 2018 The Trustees of Indiana University
// SPDX-License-Identifier: BSD-3-Clause

@use 'core' as *;

// Display flex

.#{$prefix}-flex {
  display: flex !important;
}

.#{$prefix}-inline-flex {
  display: inline-flex !important;
}

.#{$prefix}-row {
  flex-direction: row !important;
}

.#{$prefix}-row-reverse {
  flex-direction: row-reverse !important;
}

.#{$prefix}-column {
  flex-direction: column !important;
}

.#{$prefix}-column-reverse {
  flex-direction: column-reverse !important;
}

@each $key, $value in $tokens {
  @if $key == 'breakpoint' {
    @each $size, $variable in $value {
      @include mq($variable) {
        .#{$prefix}-flex-#{$size}-up {
          display: flex !important;
        }

        .#{$prefix}-inline-flex-#{$size}-up {
          display: inline-flex !important;
        }

        .#{$prefix}-row-#{$size}-up {
          flex-direction: row !important;
        }

        .#{$prefix}-row-reverse-#{$size}-up {
          flex-direction: row-reverse !important;
        }

        .#{$prefix}-column-#{$size}-up {
          flex-direction: column !important;
        }

        .#{$prefix}-column-reverse-#{$size}-up {
          flex-direction: column-reverse !important;
        }
      }
    }
  }
}

// Wrap

.#{$prefix}-wrap {
  flex-wrap: wrap !important;
}

.#{$prefix}-no-wrap {
  flex-wrap: nowrap !important;
}

.#{$prefix}-wrap-reverse {
  flex-wrap: wrap-reverse !important;
}

@each $key, $value in $tokens {
  @if $key == 'breakpoint' {
    @each $size, $variable in $value {
      @include mq($variable) {
        .#{$prefix}-wrap-#{$size}-up {
          flex-wrap: wrap !important;
        }

        .#{$prefix}-no-wrap-#{$size}-up {
          flex-wrap: nowrap !important;
        }

        .#{$prefix}-wrap-reverse-#{$size}-up {
          flex-wrap: wrap-reverse !important;
        }
      }
    }
  }
}

// Shrink

.#{$prefix}-shrink-1 {
  flex-shrink: 1 !important;
}

.#{$prefix}-shrink-0 {
  flex-shrink: 0 !important;
}

@each $key, $value in $tokens {
  @if $key == 'breakpoint' {
    @each $size, $variable in $value {
      @include mq($variable) {
        .#{$prefix}-shrink-1-#{$size}-up {
          flex-shrink: 1 !important;
        }

        .#{$prefix}-shrink-0-#{$size}-up {
          flex-shrink: 0 !important;
        }
      }
    }
  }
}

// Grow

.#{$prefix}-grow-1 {
  flex-grow: 1 !important;
}

.#{$prefix}-grow-0 {
  flex-grow: 0 !important;
}

@each $key, $value in $tokens {
  @if $key == 'breakpoint' {
    @each $size, $variable in $value {
      @include mq($variable) {
        .#{$prefix}-grow-1-#{$size}-up {
          flex-grow: 1 !important;
        }

        .#{$prefix}-grow-0-#{$size}-up {
          flex-grow: 0 !important;
        }
      }
    }
  }
}

// Align items

.#{$prefix}-items-start {
  align-items: flex-start !important;
}

.#{$prefix}-items-end {
  align-items: flex-end !important;
}

.#{$prefix}-items-center {
  align-items: center !important;
}

.#{$prefix}-items-baseline {
  align-items: baseline !important;
}

.#{$prefix}-items-stretch {
  align-items: stretch !important;
}

@each $key, $value in $tokens {
  @if $key == 'breakpoint' {
    @each $size, $variable in $value {
      @include mq($variable) {
        .#{$prefix}-items-start-#{$size}-up {
          align-items: flex-start !important;
        }

        .#{$prefix}-items-end-#{$size}-up {
          align-items: flex-end !important;
        }

        .#{$prefix}-items-center-#{$size}-up {
          align-items: center !important;
        }

        .#{$prefix}-items-baseline-#{$size}-up {
          align-items: baseline !important;
        }

        .#{$prefix}-items-stretch-#{$size}-up {
          align-items: stretch !important;
        }
      }
    }
  }
}

// Align content

.#{$prefix}-content-start {
  align-content: flex-start !important;
}

.#{$prefix}-content-end {
  align-content: flex-end !important;
}

.#{$prefix}-content-center {
  align-content: center !important;
}

.#{$prefix}-content-stretch {
  align-content: stretch !important;
}

.#{$prefix}-content-baseline {
  align-content: baseline !important;
}

@each $key, $value in $tokens {
  @if $key == 'breakpoint' {
    @each $size, $variable in $value {
      @include mq($variable) {
        .#{$prefix}-content-start-#{$size}-up {
          align-content: flex-start !important;
        }

        .#{$prefix}-content-end-#{$size}-up {
          align-content: flex-end !important;
        }

        .#{$prefix}-content-center-#{$size}-up {
          align-content: center !important;
        }

        .#{$prefix}-content-stretch-#{$size}-up {
          align-content: stretch !important;
        }

        .#{$prefix}-content-baseline-#{$size}-up {
          align-content: baseline !important;
        }
      }
    }
  }
}

//Flex justify-content

.#{$prefix}-justify-start {
  justify-content: flex-start;
}

.#{$prefix}-justify-end {
  justify-content: flex-end;
}

.#{$prefix}-justify-center {
  justify-content: center;
}

.#{$prefix}-justify-space-between {
  justify-content: space-between;
}

.#{$prefix}-justify-space-around {
  justify-content: space-around;
}

.#{$prefix}-justify-space-evenly {
  justify-content: space-evenly;
}

@each $key, $value in $tokens {
  @if $key == 'breakpoint' {
    @each $size, $variable in $value {
      @include mq($variable) {
        .#{$prefix}-justify-start-#{$size}-up {
          justify-content: flex-start;
        }

        .#{$prefix}-justify-end-#{$size}-up {
          justify-content: flex-end;
        }

        .#{$prefix}-justify-center-#{$size}-up {
          justify-content: center;
        }

        .#{$prefix}-justify-space-between-#{$size}-up {
          justify-content: space-between;
        }

        .#{$prefix}-justify-space-around-#{$size}-up {
          justify-content: space-around;
        }

        .#{$prefix}-justify-space-evenly-#{$size}-up {
          justify-content: space-evenly;
        }
      }
    }
  }
}

// self

.#{$prefix}-self-start {
  align-self: flex-start !important;
}

.#{$prefix}-self-end {
  align-self: flex-end !important;
}

.#{$prefix}-self-center {
  align-self: center !important;
}

.#{$prefix}-self-baseline {
  align-self: baseline !important;
}

.#{$prefix}-self-stretch {
  align-self: stretch !important;
}

@each $key, $value in $tokens {
  @if $key == 'breakpoint' {
    @each $size, $variable in $value {
      @include mq($variable) {
        .#{$prefix}-self-start-#{$size}-up {
          align-self: flex-start;
        }

        .#{$prefix}-self-end-#{$size}-up {
          align-self: flex-end;
        }

        .#{$prefix}-self-center-#{$size}-up {
          align-self: center;
        }

        .#{$prefix}-self-baseline-#{$size}-up {
          align-self: baseline;
        }

        .#{$prefix}-self-stretch-#{$size}-up {
          align-self: stretch;
        }
      }
    }
  }
}
