// Copyright (C) 2018 The Trustees of Indiana University
// SPDX-License-Identifier: BSD-3-Clause

@use 'core' as *;

/* stylelint-disable */

// Spacing direction values
// NOTE: using "-bottom" will break the original version of the bottom utility classes
// That used "-btm" for class names. The documentation needs to be updated to reflect
// This change.
$spacing-directions: (
  null,
  -top,
  -right,
  -bottom,
  -left
);

// Spacing size values
// NOTE you can reference these sizes in core/_variables.scss

$spacing-sizes: (
  -xxs: $xxs,
  -xs: $xs,
  -sm: $sm,
  -md: $md,
  -lg: $lg,
  -xl: $xl,
  -xxl: $xxl
);

// Super gnarly loop here, but it save sooo much time

// Based on this great example by Harry Roberts:
// https://github.com/NHSLeadership/nightingale/blob/develop/utilities/_utilities.spacing.scss#L48

@each $direction in $spacing-directions {
  @each $size, $value in $spacing-sizes {
    // NOTE: We use !important here because we want these utilities to always
    // produced the same result.

    // If the direction is "null", add margin to all directions.
    @if $direction == null {
      .#{$prefix}-m-all#{$size} {
        margin: $value !important;
      }

      .#{$prefix}-p-all#{$size} {
        padding: $value !important;
      }

      .#{$prefix}-m-tb#{$size} {
        margin-bottom: $value !important;
        margin-top: $value !important;
      }

      .#{$prefix}-m-lr#{$size} {
        margin-left: $value !important;
        margin-right: $value !important;
      }

      .#{$prefix}-p-tb#{$size} {
        padding-bottom: $value !important;
        padding-top: $value !important;
      }

      .#{$prefix}-p-lr#{$size} {
        padding-left: $value !important;
        padding-right: $value !important;
      }

      // Otherwise create individual direction utilities.
    }

    @else {
      .#{$prefix}-m#{$direction}#{$size} {
        margin#{$direction}: $value !important;
      }

      .#{$prefix}-p#{$direction}#{$size} {
        padding#{$direction}: $value !important;
      }
    }
  } // End $spacing-sizes loop
} // End $spacing-directions loop

// Builds responsive spacing classes

// TODO: This can be refactored to use fewer nested loops

@each $key, $value in $tokens {
  @if $key == 'breakpoint' {
    @each $size, $variable in $value {
      @include mq($variable) {
        @each $direction in $spacing-directions {
          @each $abbr, $refs in $spacing-sizes {
            // NOTE: We use !important here because we want these utilities to always
            // produced the same result.

            // If the direction is "null", add margin to all directions.
            @if $direction == null {
              .#{$prefix}-m-all#{$abbr}-#{$size}-up {
                margin: $refs !important;
              }

              .#{$prefix}-p-all#{$abbr}-#{$size}-up {
                padding: $refs !important;
              }

              .#{$prefix}-m-tb#{$abbr}-#{$size}-up {
                margin-bottom: $refs !important;
                margin-top: $refs !important;
              }

              .#{$prefix}-m-lr#{$abbr}-#{$size}-up {
                margin-left: $refs !important;
                margin-right: $refs !important;
              }

              .#{$prefix}-p-tb#{$abbr}-#{$size}-up {
                padding-bottom: $refs !important;
                padding-top: $refs !important;
              }

              .#{$prefix}-p-lr#{$abbr}-#{$size}-up {
                padding-left: $refs !important;
                padding-right: $refs !important;
              }

              // Otherwise create individual direction utilities.
            }

            @else {
              .#{$prefix}-m#{$direction}#{$abbr}-#{$size}-up {
                margin#{$direction}: $refs !important;
              }

              .#{$prefix}-p#{$direction}#{$abbr}-#{$size}-up {
                padding#{$direction}: $refs !important;
              }
            }
          } // End $spacing-sizes loop
        } // End $spacing-directions loop
      }
    }
  }
}

// This loop creates classes that remove margin and padding from
// an element.

// NOTE: Adding the "-none" alias here without un-prefixed version
// because the "-none" alias is totally new. We will always prefix every
// class with "rvt-" moving forward.
@each $direction in $spacing-directions {
  @if $direction == null {
    .#{$prefix}-m-all-remove,
    .#{$prefix}-m-all-none {
      margin: 0 !important;
    }

    .#{$prefix}-p-all-remove,
    .#{$prefix}-p-all-none {
      padding: 0 !important;
    }
  }

  @else {
    .#{$prefix}-m#{$direction}-remove,
    .#{$prefix}-m#{$direction}-none {
      margin#{$direction}: 0 !important;
    }

    .#{$prefix}-p#{$direction}-remove,
    .#{$prefix}-p#{$direction}-none {
      padding#{$direction}: 0 !important;
    }
  }
} // End remove loop

// NOTE: Adding the "-none" alias to the responsive classes without
// un-prefixed version because the "-none" alias is totally new. We will
// always prefix every class with "rvt-" moving forward.
@each $key, $value in $tokens {
  @if $key == 'breakpoint' {
    @each $size, $variable in $value {
      @include mq($variable) {
        @each $direction in $spacing-directions {
          @if $direction == null {
            .#{$prefix}-m-all-none-#{$size}-up {
              margin: 0 !important;
            }

            .#{$prefix}-p-all-none-#{$size}-up {
              padding: 0 !important;
            }

            .#{$prefix}-m-tb-none-#{$size}-up {
              margin-top: 0 !important;
              margin-bottom: 0 !important;
            }

            .#{$prefix}-p-tb-none-#{$size}-up {
              padding-top: 0 !important;
              padding-bottom: 0 !important;
            }

            .#{$prefix}-m-lr-none-#{$size}-up {
              margin-right: 0 !important;
              margin-left: 0 !important;
            }

            .#{$prefix}-p-lr-none-#{$size}-up {
              padding-right: 0 !important;
              padding-left: 0 !important;
            }
          }

          @else {
            .#{$prefix}-m#{$direction}-none-#{$size}-up {
              margin#{$direction}: 0 !important;
            }

            .#{$prefix}-p#{$direction}-none-#{$size}-up {
              padding#{$direction}: 0 !important;
            }
          }
        }
      }
    }
  }
}

/* stylelint-enable */
