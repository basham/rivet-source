{% include "@header-system-main-nav" %}
<!--
  #1: <main> element set up
  Note here how it is required to use Rivet flexbox utility classes
  on the <main> element in this layout configuration. This differs from
  how some other layouts are set up.
-->
<main id="main-content" class="rvt-flex rvt-flex-column rvt-grow-1">
  <!--
    #2: Start page intro with subnav section:
    This section acts as the introduction to the page. It contains breadcrumb
    navigation (optional) a page/view title (required) and a Subnav (optional)
    used to create in page navigation between screens in an app.
  -->
  <div class="rvt-bg-black-000 rvt-border-bottom rvt-p-top-xl">
    <!--
      Note this div is used to constrain the max width, add default spacing,
      and set typorgraphic defaults for the intro section.
    -->
    <div class="{{ siteContainer }} rvt-prose rvt-flow rvt-p-bottom-xl">
      <!--
        This breadcrumb nav should be used for apps with a deeply nested structure
        of pages/screens, althought it is not strictly required and the page intro
        will display correctly without it.
      -->
      {# {% include "@layouts-breadcrumb-partial" %} #}
      <h1 class="rvt-m-top-xs">Details view</h1>
    </div>
    <!--
      This container constrains the max-width of the Subnav. If your app only has
      a few screens and a relatively flat information architecture you might not
      need this Subnav. It can be removed without affecting the display of the 
      intro section.
    -->
    <div class="{{ siteContainer }}">
      {%- set listIndexContent -%}
        {% include "@bell-icon" %}
        <div class="rvt-m-left-xs">List index view</div>
      {%- endset -%}
      {%- set tableIndexContent -%}
        {% include "@calendar-icon" %}
        <div class="rvt-m-left-xs">Table index view</div>
      {%- endset -%}
      {%- set detailsContent -%}
        {% include "@gears-icon" %}
        <div class="rvt-m-left-xs">Details view</div>
      {%- endset -%}
      {%- set editContent -%}
        {% include "@user-icon" %}
        <div class="rvt-m-left-xs">Edit view</div>
      {%- endset -%}
      
      {% render "@subnav", {
        id: "App settings navigation",
        classes: "[ rvt-border-bottom-none ]",
        items: [
          {
            content: listIndexContent,
            link: "/components/preview/application-index-list"
          },
          {
            content: tableIndexContent,
            link: "/components/preview/application-index-table"
          },
          {
            content: detailsContent,
            link: "/components/preview/application-details-page",
            current: true
          },
          { content: editContent }
        ]
      }, true %}
    </div>
  </div><!-- End page intro -->
  
  <!--
    #2: Start layout wrapper/main content area
    This is a bit different than other layouts so far. The `rvt-layout__wrapper`
    and additional layout classes are applied to an element nested in side the 
    <main> element instead of the <main> element itself.
    
    Other than the placement of the rvt-layout__wrapper classes. This functions
    the same as all the other Rivet "details"-like layouts.
  -->
  <div class="rvt-layout__wrapper rvt-layout__wrapper--details {{ siteContainer }}">
    <div class="rvt-layout__sidebar [ rvt-p-top-xxl ]" id="section-nav">
      {% render "@sidenav", {
        label: "Details sub-pages",
        items: [
          {
            text: "Additional details - one"
          },
          {
            text: "Additional details - two",
            current: true
          },
          {
            text: "Additional details - three"
          },
          {
            text: "Additional details - four"
          },
          {
            text: "Additional details - five"
          }
        ]
      }, true %}
    </div>
    <div class="rvt-layout__content [ rvt-p-top-xxl ]">
      {% include "@app-details-read-partial" %}
    </div>
  </div>
</main>
{% render "@footer-system-base", {
  classes: "rvt-footer-base--light"
}, true %}